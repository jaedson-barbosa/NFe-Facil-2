rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Certificados so devem ser acessados pelo servidor
    match /certificados/{cert} {
      allow read, write: if false;
    }

    match /empresas/{empresa} {
      function isSignedIn() {
        return request.auth != null;
      }

      function getStatus() {
        return get(/databases/$(database)/documents/empresas/$(empresa)/usuarios/$(request.auth.uid)).data.status;
      }

      function readEnabled() {
        return isSignedIn() && getStatus() in [2, 3, 4];
      }

      function writeEnabled() {
        return isSignedIn() && getStatus() in [3, 4];
      }

      function isAdmin() {
        return isSignedIn() && getStatus() == 4;
      }

      allow read: if readEnabled();
      allow create, delete: if false;
      allow update: if isAdmin();

      match /usuarios/{usuario} {
        allow read: if isAdmin();
        allow create: if request.resource.data.status == 0;
        allow update: if isAdmin();
        allow delete: if false;
      }

      match /clientes/{nota} {
        allow read: if readEnabled();
        allow write: if writeEnabled();
      }

      match /transportes/{nota} {
        allow read: if readEnabled();
        allow write: if writeEnabled();
      }

      match /produtos/{nota} {
        allow read: if readEnabled();
        allow write: if writeEnabled();
      }

      match /notasSalvas/{nota} {
        allow read: if readEnabled();
        allow write: if writeEnabled();
      }

      match /notasEmitidas/{nota} {
        allow read: if readEnabled();
        allow write: if false;
      }
    }
  }
}
